# OpenAPI Schema for SakuraFrp API v4

openapi: 3.0.3
info:
  title: SakuraFrp API
  version: 4.1.0
  termsOfService: "https://www.natfrp.com/policy/tos"
  license:
    name: GNU Affero General Public License v3.0
    url: "https://www.gnu.org/licenses/agpl-3.0.en.html"
  contact:
    name: SakuraFrp Support
    email: support@natfrp.cloud

servers:
  - url: "https://api.natfrp.com/v4"
    description: SakuraFrp API

paths:
  /system/bulletin:
    get:
      tags: [系统信息]
      summary: 获取平台公告
      security: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - title
                    - content
                    - icon
                    - time
                    - expand
                  properties:
                    title:
                      type: string
                      description: 公告标题
                      example: 关于 SakuraFrp API 的说明
                    content:
                      type: string
                      description: 公告内容
                      example: Lorem ipsum dolor sit amet, consectetur adipiscing elit
                    time:
                      type: string
                      description: 公告发布时间
                      example: 2023/01/01
                    icon:
                      type: string
                      description: 公告图标
                      example: 😊
                    expand:
                      type: boolean
                      description: 是否默认展开
                      example: true
          description: 返回平台公告列表
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /system/download:
    get:
      tags: [系统信息]
      summary: 获取软件下载信息
      security: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: object
                    description: 版本信息
                    properties:
                      launcher:
                        type: object
                        description: 启动器版本信息
                        properties:
                          time:
                            type: integer
                            description: 版本发布时间
                            example: 1620000000
                          version:
                            type: string
                            description: 版本号
                            example: 2.0.6.0
                          note:
                            type: string
                            description: 更新日志
                            example: Ut aliquam purus sit amet luctus venenatis lectus magna fringilla
                      frpc:
                        type: object
                        description: 客户端版本信息
                        properties:
                          time:
                            type: integer
                            description: 版本发布时间
                            example: 1620000000
                          version:
                            type: string
                            description: 版本号
                            example: 0.45.0-sakura-2
                          note:
                            type: string
                            description: 更新日志
                            example: Tristique senectus et netus et malesuada fames
                  downloads:
                    type: object
                    description: 下载分类
                    additionalProperties:
                      type: object
                      description: 某个分类的下载信息
                      additionalProperties:
                        type: object
                        required:
                          - title
                          - url
                        properties:
                          title:
                            type: string
                            description: 下载标题
                            example: Windows 安装程序
                          url:
                            type: string
                            description: 下载链接
                            example: https://getfrp.sh/l/SakuraLauncher.exe
                          url_real:
                            type: string
                            description: 无重定向的真实下载链接
                            example: https://nyat-static.globalslb.net/natfrp/client\/2.0.6.0/SakuraLauncher.exe
                          hash:
                            type: string
                            description: 下载文件哈希值
                            example: 1234567890abcdef1234567890abcdef
                          size:
                            type: integer
                            description: 下载文件大小
                            example: 114514
          description: 返回软件下载信息
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /system/policy:
    get:
      tags: [系统信息]
      summary: 获取服务条款和策略
      security: []
      parameters:
        - name: type
          in: query
          description: 策略类型
          required: true
          schema:
            type: string
            enum:
              - tos
              - content
              - privacy
              - rule
              - refund
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - content
                properties:
                  alert:
                    type: string
                    description: 置顶警告框内容
                    example: Habitasse platea dictumst vestibulum rhoncus est pellentesque elit
                  updated:
                    type: string
                    description: 策略更新时间
                    example: 2023/01/04
                  content:
                    type: string
                    description: 策略内容文本
                    example: Nam at lectus urna duis. Sed pulvinar proin gravida hendrerit. Nec feugiat nisl pretium fusce id velit ut tortor pretium.
          description: 返回服务条款和策略
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /user/info:
    get:
      tags: [用户信息]
      summary: 获取用户基本信息
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: ./schemas/UserInfo.yaml
          description: 返回用户信息
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /nodes:
    get:
      tags: [节点管理]
      summary: 列出所有节点
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - name
                    - host
                    - description
                    - vip
                    - flag
                    - band
                    - enforce_auth
                    - tls_sucks
                  properties:
                    name:
                      type: string
                      description: 节点名称
                      example: 一个神奇的节点
                    host:
                      type: string
                      description: 节点地址
                      example: idea-leaper-1.natfrp.cloud
                    description:
                      type: string
                      description: 节点说明
                      example: 推荐某些用户使用
                    vip:
                      type: integer
                      description: 节点 VIP 等级
                    flag:
                      type: integer
                      description: |
                        节点 Flag
                        - `0b11`: 允许 HTTP 隧道
                        - `1 << 2`: 允许创建隧道
                        - `1 << 3`: 是否为内地节点
                        - `1 << 4`: 是否为无防节点
                        - `1 << 5`: 允许 UDP 流量
                      example: 0
                    band:
                      type: string
                      description: 节点带宽
                      example: 100M
                    enforce_auth:
                      type: boolean
                      description: 强制启用访问认证
                      example: false
                    tls_sucks:
                      type: boolean
                      description: 机房屏蔽 TLS 流量
                      example: false
          description: 节点列表
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnels:
    get:
      tags: [隧道管理]
      summary: 列出所有隧道
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./schemas/TunnelFull.yaml
          description: 隧道列表
        "500": { $ref: "#/components/responses/ErrorResponse" }
    post:
      tags: [隧道管理]
      summary: 创建隧道
      requestBody:
        content:
          application/www-form-urlencoded: &tunnelCreateRequestBody
            schema:
              $ref: ./schemas/TunnelFull.yaml
          application/json: *tunnelCreateRequestBody
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: 创建的隧道 ID
                    example: 114514
                  name:
                    type: string
                    description: 创建的隧道名
                    example: SampleTunnel
                  remote:
                    description: 远程信息
                    oneOf:
                      - description: "远程端口"
                        type: integer
                        example: 114455
                      - description: "绑定域名"
                        type: string
                        example: "www.example.com"
          description: 创建成功
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnel/config:
    post:
      summary: 获取隧道配置文件
      tags: [隧道管理]
      requestBody:
        content:
          application/www-form-urlencoded: &tunnelConfigRequestBody
            schema:
              type: object
              properties:
                query:
                  description: |
                    启动目标查询字符串，格式为 `<启动目标1>[,启动目标2...]`

                    多个 **启动目标** 使用半角逗号 "," 分开，中间不能有空格或其他字符

                    每个 **启动目标** 可以是：
                    - 一个隧道 ID（如 `114514`）
                    - `n` 前缀的节点 ID（如 `n233`）
                  type: string
                  example: "114514,114515,n233"
            examples:
              查询单条隧道:
                value:
                  query: "114514"
              查询单个节点下所有隧道:
                value:
                  query: n233
              查询多节点下的多条隧道:
                value:
                  query: "n233,n234,114514"
          application/json: *tunnelConfigRequestBody

      responses:
        "200":
          content:
            text/plain: {}
          description: 可被 frpc 加载的 ini 配置文件
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnel/edit:
    post:
      summary: 编辑隧道
      tags: [隧道管理]
      requestBody:
        content:
          application/www-form-urlencoded: &tunnelEditRequestBody
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: 隧道 ID
                  example: 114514
                note:
                  type: string
                  description: 隧道备注
                  example: SampleTunnel
                local_ip:
                  type: string
                  description: 本地 IP
                  example: 127.0.0.1
                local_port:
                  type: integer
                  description: 本地端口
                  example: 114514
                extra:
                  type: string
                  description: 额外参数列表
                  example: "key=value\nkey2=value2"
          application/json: *tunnelEditRequestBody
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - extra
                properties:
                  extra:
                    type: string
                    description: 处理后的额外参数列表
                    example: "key=value\nkey2=value2"
          description: 服务端处理后的参数
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnel/migrate:
    post:
      summary: 迁移隧道
      tags: [隧道管理]
      requestBody:
        content:
          application/www-form-urlencoded: &tunnelMigrateRequestBody
            schema:
              type: object
              required:
                - id
                - node
              properties:
                id:
                  type: integer
                  description: 隧道 ID
                  example: 114514
                node:
                  type: integer
                  description: 目标节点 ID
                  example: 233
          application/json: *tunnelMigrateRequestBody
      responses:
        "204":
          description: 迁移成功
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnel/delete:
    post:
      summary: 删除隧道
      tags: [隧道管理]
      requestBody:
        content:
          application/www-form-urlencoded: &deleteTunnelRequestBody
            schema:
              type: object
              properties:
                ids:
                  description: 以 `,` 分隔的隧道 ID 列表，最大支持 10 条隧道
                  type: string
                  example: 114514,1919,810
          application/json: *deleteTunnelRequestBody
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - deleted
                  - failed
                properties:
                  deleted:
                    type: array
                    items:
                      type: integer
                    description: 被删除的隧道 ID 列表
                    example:
                      - 114514
                      - 114515
                  failed:
                    type: array
                    items:
                      type: integer
                    description: 已删除但未能成功踢下线的隧道 ID 列表
                    example:
                      - 1919
          description: 删除成功
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnel/traffic:
    get:
      summary: 获取流量使用记录
      tags: [隧道管理]
      parameters:
        - name: id
          in: query
          description: 隧道 ID
          required: true
          schema:
            type: integer
            description: 隧道 ID
            example: 114514
      description: 返回 `Timestamp[Traffic]`
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
          description: 隧道流量历史记录
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnel/auth:
    post:
      summary: 授权 IP 访问隧道
      tags: [隧道管理, 访问认证]
      requestBody:
        content:
          application/www-form-urlencoded: &tunnelAuthRequestBody
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  description: 隧道 ID
                  type: integer
                  example: 114514
                ip:
                  description: 要授权的 IP，留空授权请求 IP
                  type: string
                  example: "114.51.4.191"
          application/json: *tunnelAuthRequestBody
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - ip
                properties:
                  ip:
                    type: string
                    description: 授权成功的 IP
                    example: "114.51.4.191"
          description: 授权成功
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /tunnel/auth_query:
    post:
      summary: 根据节点 IP 和端口查询隧道，用于访问认证授权
      tags: [隧道管理, 访问认证]
      requestBody:
        content:
          application/www-form-urlencoded: &tunnelRemoteQueryRequestBody
            schema:
              type: object
              required:
                - ip
                - port
              properties:
                ip:
                  description: 节点 IP
                  type: string
                  example: "114.51.4.191"
                port:
                  description: 隧道远程端口
                  type: integer
                  example: 114514
          application/json: *tunnelRemoteQueryRequestBody
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: 隧道 ID
                    example: 114514
                  name:
                    type: string
                    description: 隧道名
                    example: SampleTunnel
          description: 查询到的隧道信息
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /computers:
    get:
      summary: 获取计算机列表
      tags: [计算机管理]
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./schemas/ComputerWithId.yaml
          description: 计算机列表
        "500": { $ref: "#/components/responses/ErrorResponse" }
    post:
      summary: 添加计算机
      tags: [计算机管理]
      requestBody:
        content:
          application/www-form-urlencoded: &addComputerRequestBody
            schema:
              $ref: ./schemas/Computer.yaml
          application/json: *addComputerRequestBody
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: 计算机 ID
                    example: 114514
          description: 创建成功
        "500": { $ref: "#/components/responses/ErrorResponse" }
    patch:
      summary: 更新计算机信息
      tags: [计算机管理]
      requestBody:
        content:
          application/www-form-urlencoded: &updateComputersRequestBody
            schema:
              $ref: ./schemas/ComputerWithId.yaml
          application/json: *updateComputersRequestBody
      responses:
        "204":
          description: 更新成功
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /computer/delete:
    post:
      summary: 删除计算机
      tags: [计算机管理]
      requestBody:
        content:
          application/www-form-urlencoded: &deleteComputerRequestBody
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: 计算机 ID
                  example: 1001
          application/json: *deleteComputerRequestBody
      responses:
        "204":
          description: 删除成功
        "500": { $ref: "#/components/responses/ErrorResponse" }

  /computer/poweron:
    post:
      summary: 执行远程开机
      tags: [计算机管理]
      requestBody:
        content:
          application/www-form-urlencoded: &powerOnRequestBody
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: 计算机 ID
                  example: 1001
                password:
                  type: string
                  description: 远程开机客户端密码
                  example: "wdnmdpassword"
          application/json: *powerOnRequestBody
      responses:
        "204":
          description: 开机成功
        "500": { $ref: "#/components/responses/ErrorResponse" }

components:
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - msg
            properties:
              code:
                description: 错误代码
                type: integer
                example: 403
              msg:
                description: 人类友好的错误信息
                type: string
                example: 无权访问
      description: 通用错误返回

  securitySchemes:
    PanelSessionCookie:
      type: apiKey
      description: 主站 PHP Session 认证
      name: PHPSESSID
      in: cookie
    UserToken:
      scheme: bearer
      type: http
      description: 访问密钥认证 - Bearer Token
    UserTokenPost:
      type: apiKey
      description: 访问密钥认证 - POST 参数
      name: token
      in: query

security:
  - UserToken: []
  - UserTokenPost: []
  - PanelSessionCookie: []
